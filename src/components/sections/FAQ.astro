---
import CornerBorders from "../ui/CornerBorders.astro";
import type { Translation } from "../../i18n";

interface Props {
  t: Translation["faq"];
}

const { t } = Astro.props as Props;
---

<style>
  .answer {
    transition: max-height 0.3s ease-in-out;
    max-height: 0;
    overflow: hidden;
  }

  /* Use a class to control the open state */
  .faq-item.is-open .answer {
    max-height: 500px; /* A fallback max-height, JS will override */
  }

  .faq-item.is-open svg {
    transform: rotate(180deg);
  }
</style>

<section id="faq" class="scroll-mt-24 mb-35">
  <div class="mx-auto max-w-2x text-center">
    <h2 class="text-4xl font-bold tracking-tight text-white sm:text-5xl">
      {t.title}
    </h2>
  </div>

  <div class="mt-12 max-w-3xl mx-auto">
    {
      t.items.map((item, index) => (
        <div class="faq-item border-b border-white/10">
          <button
            class="w-full text-left py-4 pr-8 relative"
            aria-expanded="false"
            aria-controls={`faq-answer-${index}`}
            id={`faq-question-${index}`}
          >
            <h3 class="text-lg font-semibold text-white md:text-xl">
              {item.question}
            </h3>
            <span class="absolute right-0 top-1/2 -translate-y-1/2 h-6 w-6 flex items-center justify-center">
              <svg
                class="h-4 w-4 text-white/70 transition-transform"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M19 9l-7 7-7-7"
                />
              </svg>
            </span>
          </button>
          <div
            id={`faq-answer-${index}`}
            role="region"
            aria-labelledby={`faq-question-${index}`}
            class="answer text-sm leading-6 text-white/70 md:text-base md:leading-7"
          >
            <div class="pb-4">
              <p set:html={item.answer} />
            </div>
          </div>
        </div>
      ))
    }
  </div>
</section>

<script>
  const faqItems = document.querySelectorAll(".faq-item");

  faqItems.forEach((item) => {
    const button = item.querySelector("button");
    const answer = item.querySelector(".answer");

    if (!button || !answer) {
      return;
    }

    button.addEventListener("click", () => {
      const isExpanded = button.getAttribute("aria-expanded") === "true";

      button.setAttribute("aria-expanded", String(!isExpanded));
      item.classList.toggle("is-open");

      if (!isExpanded) {
        answer.style.maxHeight = answer.scrollHeight + "px";
      } else {
        answer.style.maxHeight = null;
      }
    });
  });
</script>
