---
import type { Translation } from "../../i18n";

interface Props {
  t: Translation["pricing"];
}

const { t } = Astro.props as Props;
---

<section id="pricing" class="scroll-mt-24 w-full">
  <div class="mx-auto max-w-2xl text-center">
    <h2 class="text-4xl font-bold tracking-tight text-white sm:text-5xl">
      {t.title}
    </h2>
    <p class="mt-6 text-lg leading-8 text-white/70">{t.description}</p>
  </div>

  <div class="mx-auto mt-14 w-full max-w-[1728px] px-[3%] lg:px-[5%]">
    <div class="grid gap-6 md:grid-cols-3">
      {
        t.plans.map((plan) => {
          const isFeatured = Boolean(plan.badge);
          return (
            <div
              class={`flex h-full flex-col gap-6 rounded-2xl border border-white/12 bg-[#0C1014]/85 p-8 transition-transform md:hover:-translate-y-1 ${
                isFeatured ? "border-primary/70 bg-[#0F1419]/95 shadow-[0_24px_60px_rgba(7,217,196,0.15)]" : ""
              }`}
            >
              {plan.badge && (
                <span
                  class="self-start rounded-full bg-primary/15 px-3 py-1 text-xs font-semibold uppercase tracking-[0.24em] text-primary"
                >
                  {plan.badge}
                </span>
              )}

              <div class={isFeatured ? "pt-1" : "pt-2"}>
                <h3 class="text-2xl font-semibold text-white">{plan.name}</h3>
                <p class="mt-3 text-3xl font-bold text-primary">{plan.price}</p>
              </div>

              <p class="text-sm leading-6 text-white/70 md:text-base md:leading-7">
                {plan.description}
              </p>

              <ul class="flex flex-col gap-3 text-sm leading-6 text-white/70 md:text-base md:leading-7">
                {plan.features.map((feature) => (
                  <li class="flex items-center gap-3">
                    <span class="flex h-2 w-2 flex-shrink-0 items-center justify-center rounded-full bg-primary/70"></span>
                    <span class="flex-1">{feature}</span>
                  </li>
                ))}
              </ul>

              <div class="pt-4 mt-auto">
                <a
                  href={plan.ctaHref}
                  target={plan.ctaHref.startsWith("http") ? "_blank" : undefined}
                  class={`inline-flex w-full items-center justify-center rounded-xl border px-4 py-3 text-sm font-semibold uppercase tracking-[0.24em] transition-colors ${
                    isFeatured
                      ? "border-primary bg-primary text-[#0B1116] hover:bg-primary/90"
                      : "border-white/20 text-white/80 hover:border-primary/60 hover:text-primary"
                  }`}
                >
                  {plan.ctaLabel}
                </a>
              </div>
            </div>
          );
        })
      }
    </div>
  </div>
</section>
